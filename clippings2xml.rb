#!/usr/bin/env ruby

##
# clippings2xml.rb
#
# This script transforms the "My Clippings.txt" file generated by
# highlighting passages on the Amazon Kindle device
#
# Copyright 2016 Richard Davis LGPL-2.1

# open file for reading
print 'Enter input file name => '
ifile = gets.chomp
input = File.new(ifile)

# open output file
print 'Enter output file name => '
ofile = gets.chomp
output = File.new(ofile, 'w+')

# write opening tag for root element
output.puts '<passages>'

# iterates over each line, extracting data and writing xml document
File.foreach(input) do |line|

  # recognizes delimiter indicating new passage,  writes start of
  # individual passage element, and increases line number counter
  if line.chomp == '=========='
    output.print "\t<passage "
    @num_line = 1

  # extracts book and author information from first line, writes
  # respective attributes, and increments line number counter
  elsif @num_line == 1
    %r[(?<book>.*)\s\((?<author>[\w|\s|\,|\.|\p{Word}]*)\)$] =~ line
    output.print "book-title=\"#{book}\" "
    output.print "author=\"#{author}\" "
    @num_line = 2

  # extracts page number and kindle location information, writes
  # respective attributes, and increments line number counter
  elsif @num_line == 2
    %r[[page]+\s+(?<page_num>[0-9]+)+\p{Any}+Location+\s+(?<l_start>[0-9]+)+\-+(?<l_end>[0-9]+)] =~ line
    output.print "page-number=\"#{page_num}\" loc_start=\"#{l_start}\" loc_end=\"#{l_end}\" edition=\"Kindle\">\n"
    @num_line = 3

  # skips over blank line and increments line counter
  elsif @num_line == 3
    @num_line = 4

  # writes passage as text node and writes closing tag for passage
  # element
  elsif @num_line == 4
    output.print "\t\t#{line.chomp}\n\t</passage>\n"
  end

end

# writes closing tag for root element
output.puts '</passages>'

puts "#{ifile} successfully transformed to XML document #{ofile}."
